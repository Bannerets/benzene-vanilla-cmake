Benzene TODO file
=================

broderic [091118]
* Wolve
  * Use only a single board instead of two
  * Check dfpn tt for losing moves during move gen
* MoHex
  * Add time control to mohex
  * Update tree if dfpn solves states
* Dfpn
  * db read/write
  * "Proof simulation"
* Patterns
  * Make dead cells match all colors.
    It would then be possible that empty cells can be dominated/killed by 
    occupied cells. How to handle this?
* Other
  * Parallel vcs
  * Switch dead region/decomp detection to new Phil algo
  * Create HexPosition class; make StoneBoard use it.
  * Better book visualization tools
  * Add HexBoard::Resize() method; use in SyncBoard()
  * Support reading installed shared data in $(pkgdatadir)
  * Remove lssolve and replace with external linear alg. library
    * Probably need to use only graph on empty cells, since most
      libraries suck and can't handle the graphs we currently use.

ph [091118]
* Website stuff:
  * Add handicap Java applet
* Virtual-connection improvements:
  * Captured keys/midpoints
    * Verify no problems when captured set overlaps endpoints during H-search
  * Common miai-substrategy
    * Code up algorithm
  * Develop ideas for backing-up/recalling `important' connections
* Unique probes idea:
  * Figure out why currently doesn't improve solver
  * Find some way to make it help!
* ICE improvements:
  * Clean-up (dead and clique-type code, eliminate PI proof set code)
  * Star decompositions
    * Is there any way to detect these efficiently?
  * Implement algorithm developed with Laurie to find more dead cell patterns
    * Later develop similar algorithm for captured, create more vul/rev/dom/etc
* DFPN improvements:
  * Backing up ICE (reduce MTC w/ domination w/o introducing any new children)
  * Shift to Kishi/explorer version if possible
  * Add DB for shallow levels
* Solver DB:
  * Initialize with all `even' positions up to k stones (Black wins by SSA)
  * Transposition engine to compute closed set of all transposition types
    * Start with player exchange transpositions
    * Add unique probe backup
    * Add induced path (equiv/inf/dom) stone shifting
* Tournament tool improvements:
  * Script for automatic post-game sgf analysis with solver
* Mustplay mask
  * Figure out how on earth to make this work :)
* Opening books guided adjustment:
  * Allow it to analyze/expand path of sgfs to where the book drops out
* Evaluation function possibilities
  * Try weighted tuple of different virtual connection distances between edges
